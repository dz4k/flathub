# Called by build-hledger-dep-manifest.jq.
# Converts the app manifest generated by cabal-flatpak into a dependency manifest
# and adds workarounds for cabal-flatpak's deficiencies.

# The ghc module generated by cabal-flatpak uses "buildsystem":"simple"
# and manually calls ./configure and make install.
# Use "buildsystem":"autotools" instead.
def autotools: .
    | (.buildsystem = "autotools")
    | (."post-install" = ."build-commands"[:-2])
    | del(."build-commands")
    # The "make" default recipe for ghc just prints a message and exits with code 1. Ignore that.
    | (."make-args" = ["-i"])
    ;

# cabal-flatpak has a bug where it can't generate aarch64 manifests for newer ghc versions.
# This filter converts the x86_64 ghc module into an aarch64 one.
def aarch64: .
    | (."only-arches" = ["aarch64"])
    | ((
            .name,
            ."post-install"[]
        ) |= gsub("x86_64"; "aarch64"))
    | (.sources = [
        {
            sha256: "58d5ce65758ec5179b448e4e1a2f835924b4ada96cf56af80d011bed87d91fef",
            type: "archive",
            url: "https://downloads.haskell.org/ghc/9.6.6/ghc-9.6.6-aarch64-deb10-linux.tar.xz"
        }
    ]);

.modules
# Update ghc module to use autotools.
| (.[0] |= autotools)
# Add aarch64-ified ghc module.
| [.[0] | aarch64] + .
# Workaround: csv ships with broken Setup.hs that shadows our generated Setup.lhs.
| ((.[] | select(.name == "csv"))."build-commands" |= ["rm Setup.hs"] + .)
| {
    name: "hledger-exe",
    buildsystem: "simple",
    "build-commands": [],
    modules: .,
}
